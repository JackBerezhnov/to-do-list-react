{"version":3,"sources":["components/input/Input.js","components/item/Item.js","components/item-list/ItemList.js","components/to-do-list/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","console","log","TextField","type","name","id","value","todo","task","placeholder","onChange","e","Item","item","toggleComplete","removeTodo","ListItem","style","display","Checkbox","checked","complete","onClick","Typography","variant","color","textDecoration","description","IconButton","ItemList","items","List","className","map","ToDoList","useState","toDoItems","setToDoItems","toDoItem","setToDoItem","onSubmit","preventDefault","trim","addTodo","uuidv4","target","Button","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAmBeA,EAhBD,SAACC,GACX,OACI,gCACKC,QAAQC,IAAIF,GACb,cAACG,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,OACLC,GAAG,YACHC,MAAOP,EAAMQ,KAAKC,KAClBC,YAAY,uCACZC,SAAU,SAAAC,GAAC,OAAIZ,EAAMW,SAASC,U,qDCwB/BC,EAjCF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WAUlC,OACI,eAACC,EAAA,EAAD,CAAUC,MAAO,CAAEC,QAAS,QAA5B,UACI,cAACC,EAAA,EAAD,CACIC,QAASP,EAAKQ,SACdlB,KAAK,WACLmB,QAbZ,WACIR,EAAeD,EAAKR,OAchB,cAACkB,EAAA,EAAD,CACIC,QAAQ,QACRP,MAAO,CACHQ,MAAO,QACPC,eAAgBb,EAAKQ,SAAW,eAAiB,MAJzD,SAOCR,EAAKc,cAEN,cAACC,EAAA,EAAD,CAAYN,QApBpB,WACIP,EAAWF,EAAKR,KAmBZ,SACI,cAAC,IAAD,U,SChBDwB,G,MAVE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOhB,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACvC,OACI,cAACgB,EAAA,EAAD,CAAMC,UAAU,OAAhB,SACKF,EAAMG,KAAI,SAAA1B,GAAI,OACX,cAAC,EAAD,CAAoBM,KAAMN,EAAMO,eAAgBA,EAAgBC,WAAYA,GAAjER,EAAKF,W,wBCuDjB6B,MAxDf,WAAqB,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,KACEC,EADF,OAEgBF,mBAAS,CACrC9B,GAAI,GACJsB,YAAa,GACbN,UAAU,IALE,mBAETiB,EAFS,KAECC,EAFD,KA0ChB,OACI,sBAAKP,UAAU,WAAf,UACI,cAACT,EAAA,EAAD,CAAYC,QAAQ,KAApB,wBAGA,uBAAMgB,SAbd,SAAwB7B,GACpBA,EAAE8B,iBACCH,EAASX,YAAYe,UAV5B,SAAiBJ,GACbD,EAAa,CAACC,GAAF,mBAAeF,KAUvBO,CAAQ,2BAAKL,GAAN,IAAgBjC,GAAIuC,iBAC3BL,EAAY,2BAAKD,GAAN,IAAgBX,YAAa,QASxC,UACI,cAAC,EAAD,CAAOjB,SAxCnB,SAAsBC,GAClB4B,EAAY,2BAAKD,GAAN,IAAgBX,YAAahB,EAAEkC,OAAOvC,UAuCVC,KAAM+B,IACrC,cAACQ,EAAA,EAAD,CAAQ3C,KAAK,SAAS6B,UAAU,cAAcR,QAAQ,YAAYC,MAAM,UAAxE,iBACA,cAAC,EAAD,CAAUK,MAAOM,EAAWtB,eAtCxC,SAAwBT,GACpBgC,EACID,EAAUH,KAAI,SAAA1B,GACV,OAAGA,EAAKF,KAAOA,EACJ,2BACAE,GADP,IAEIc,UAAWd,EAAKc,WAGjBd,OA6BqDQ,WApBxE,SAAoBV,GAChBgC,EAAaD,EAAUW,QAAO,SAAAxC,GAAI,OAAIA,EAAKF,KAAOA,gBC9B3C2C,MANf,WACE,OACI,cAAC,EAAD,KCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.294d1a06.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div>\r\n            {console.log(props)}\r\n            <TextField \r\n                type=\"text\"\r\n                name=\"toDo\"\r\n                id=\"toDoInput\"\r\n                value={props.todo.task}\r\n                placeholder=\"Enter a thing what you need to do...\"\r\n                onChange={e => props.onChange(e)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Item = ({ item, toggleComplete, removeTodo }) => {\r\n    \r\n    function handleCheckboxClick() {\r\n        toggleComplete(item.id);\r\n    }\r\n    \r\n    function handleRemoveClick() {\r\n        removeTodo(item.id);\r\n    }\r\n\r\n    return(\r\n        <ListItem style={{ display: \"flex\" }}>\r\n            <Checkbox\r\n                checked={item.complete}\r\n                type=\"checkbox\" \r\n                onClick={handleCheckboxClick} \r\n            />\r\n            <Typography\r\n                variant=\"body1\"\r\n                style={{\r\n                    color: \"black\",\r\n                    textDecoration: item.complete ? \"line-through\" : null\r\n                }}\r\n            >\r\n            {item.description}\r\n            </Typography>\r\n            <IconButton onClick={handleRemoveClick}>\r\n                <CloseIcon />\r\n            </IconButton>\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from \"../item/Item\";\r\nimport List from \"@material-ui/core/List\";\r\nimport \"./ItemList.css\";\r\n\r\nconst ItemList = ({ items, toggleComplete, removeTodo }) => {\r\n    return (\r\n        <List className=\"list\">\r\n            {items.map(todo => (\r\n                <Item key={todo.id} item={todo} toggleComplete={toggleComplete} removeTodo={removeTodo}/>\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import React, { useState } from 'react';\r\nimport Input from '../input/Input';\r\nimport ItemList from '../item-list/ItemList';\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './ToDoList.css';\r\n\r\nfunction ToDoList() {\r\n    const [toDoItems, setToDoItems] = useState([]);\r\n    const [toDoItem, setToDoItem] = useState({\r\n        id: \"\",\r\n        description: \"\",\r\n        complete: false\r\n    })\r\n\r\n    function handleChange(e) {\r\n        setToDoItem({ ...toDoItem, description: e.target.value});\r\n    }\r\n\r\n    function toggleComplete(id) {\r\n        setToDoItems(\r\n            toDoItems.map(todo => {\r\n                if(todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        complete: !todo.complete\r\n                    }\r\n                }\r\n                return todo;\r\n            })\r\n        );\r\n    }\r\n\r\n    function addTodo(toDoItem) {\r\n        setToDoItems([toDoItem, ...toDoItems])\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        setToDoItems(toDoItems.filter(todo => todo.id !== id));\r\n    }\r\n\r\n    function submitUserData(e) {\r\n        e.preventDefault();\r\n        if(toDoItem.description.trim()) {\r\n            addTodo({ ...toDoItem, id: uuidv4() });\r\n            setToDoItem({ ...toDoItem, description: \"\" });\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"toDoList\">\r\n            <Typography variant=\"h1\">\r\n                To Do List\r\n            </Typography>\r\n            <form onSubmit={submitUserData}>\r\n                <Input onChange={handleChange} todo={toDoItem}/>\r\n                <Button type=\"submit\" className=\"btn success\" variant=\"contained\" color=\"primary\">Add</Button>\r\n                <ItemList items={toDoItems} toggleComplete={toggleComplete} removeTodo={removeTodo}/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\nimport ToDoList from './components/to-do-list/ToDoList';\n\nfunction App() {\n  return (\n      <ToDoList />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}