{"version":3,"sources":["components/input/Input.js","components/item/Item.js","components/item-list/ItemList.js","components/to-do-list/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","console","log","type","name","id","value","todo","task","placeholder","onChange","e","Item","description","ItemList","items","map","ToDoList","useState","userInput","toDoItems","setToDoItems","complete","toDoItem","setToDoItem","onSubmit","preventDefault","trim","addTodo","v4","target","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAoBeA,EAhBD,SAACC,GACX,OACI,gCACKC,QAAQC,IAAIF,GACb,uBACIG,KAAK,OACLC,KAAK,OACLC,GAAG,YACHC,MAAON,EAAMO,KAAKC,KAClBC,YAAY,uCACZC,SAAU,SAAAC,GAAC,OAAIX,EAAMU,SAASC,UCF/BC,EAVF,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACZ,OACI,gCACI,uBAAOH,KAAK,aACZ,6BAAKG,EAAMO,cACX,2CCMGC,EAVE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACI,6BACKA,EAAMC,KAAI,SAAAT,GAAI,OACX,cAAC,EAAD,CAAoBD,MAAOC,GAAhBA,EAAKF,U,QCqCjBY,MAtCf,WAAqB,IAAD,EACkBC,mBAAS,IAD3B,mBACTC,EADS,aAEkBD,mBAAS,KAF3B,mBAETE,EAFS,KAEEC,EAFF,OAGgBH,mBAAS,CACrCb,GAAI,GACJQ,YAAa,GACbS,UAAU,IANE,mBAGTC,EAHS,KAGCC,EAHD,KAyBhB,OACI,gCACI,6CACA,uBAAMC,SAXd,SAAwBd,GACpBA,EAAEe,iBACCH,EAASV,YAAYc,UAN5B,SAAiBJ,GACbF,EAAa,CAACE,GAAF,mBAAeH,KAMvBQ,CAAQ,2BAAKL,GAAN,IAAgBlB,GAAIwB,OAC3BL,EAAY,2BAAKD,GAAN,IAAgBV,YAAa,QAOxC,UACI,cAAC,EAAD,CAAOH,SApBnB,SAAsBC,GAClBa,EAAY,2BAAKD,GAAN,IAAgBV,YAAaF,EAAEmB,OAAOxB,UAmBVC,KAAMgB,IACrC,wBAAQpB,KAAK,SAAS4B,UAAU,cAAhC,iBACA,cAAC,EAAD,CAAUhB,MAAOK,OAErB,4BAAID,QC9BDa,MANf,WACE,OACI,cAAC,EAAD,KCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.badf8d2e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Input.css';\r\nimport ToDoList from '../to-do-list/ToDoList';\r\n\r\nconst Input = (props) => {\r\n    return (\r\n        <div>\r\n            {console.log(props)}\r\n            <input \r\n                type=\"text\"\r\n                name=\"toDo\"\r\n                id=\"toDoInput\"\r\n                value={props.todo.task}\r\n                placeholder=\"Enter a thing what you need to do...\"\r\n                onChange={e => props.onChange(e)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Item = ({ value }) => {\r\n    return(\r\n        <div>\r\n            <input type=\"checkbox\"/>\r\n            <li>{value.description}</li>\r\n            <button>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from \"../item/Item\";\r\n\r\nconst ItemList = ({ items }) => {\r\n    return (\r\n        <ul>\r\n            {items.map(todo => (\r\n                <Item key={todo.id} value={todo}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import React, { useState, useEffect } from 'react';\r\nimport Input from '../input/Input';\r\nimport ItemList from '../item-list/ItemList';\r\nimport {v4 as uuid, v4} from \"uuid\";\r\n\r\n\r\nfunction ToDoList() {\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    const [toDoItems, setToDoItems] = useState([]);\r\n    const [toDoItem, setToDoItem] = useState({\r\n        id: \"\",\r\n        description: \"\",\r\n        complete: false\r\n    })\r\n\r\n    function handleChange(e) {\r\n        setToDoItem({ ...toDoItem, description: e.target.value});\r\n    }\r\n\r\n    function addTodo(toDoItem) {\r\n        setToDoItems([toDoItem, ...toDoItems])\r\n    }\r\n\r\n    function submitUserData(e) {\r\n        e.preventDefault();\r\n        if(toDoItem.description.trim()) {\r\n            addTodo({ ...toDoItem, id: v4 });\r\n            setToDoItem({ ...toDoItem, description: \"\" });\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <h1>To Do List!</h1>\r\n            <form onSubmit={submitUserData}>\r\n                <Input onChange={handleChange} todo={toDoItem}/>\r\n                <button type=\"submit\" className=\"btn success\">Add</button>\r\n                <ItemList items={toDoItems}/>\r\n            </form>\r\n            <p>{userInput}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\nimport ToDoList from './components/to-do-list/ToDoList';\n\nfunction App() {\n  return (\n      <ToDoList />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}